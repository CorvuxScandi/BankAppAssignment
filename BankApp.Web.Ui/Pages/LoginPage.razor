@page "/login"
@inject IAuthenticationService AuthService
@inject NavigationManager NavMan
@inject HttpClient _client

<div class="card, shadow-sm">
    <div class="card-title card-header">
        <p>Logga in med din Email och lösenord</p>
    </div>
    @if (ShowAuthError)
    {
        <div class="alert alert-danger" role="alert">
            <p>@AuthText</p>
        </div>
    }
    <div class="card-body">

        <EditForm Model="model" OnValidSubmit="Authenticate">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group row">
                <InputText id="email" class="form-control" @bind-Value="model.Email" DisplayName="Email" />
            </div>
            <div class="form-group row">
                <InputText id="password" type="password" class="form-control" @bind-Value="model.Password" DisplayName="Password" />
            </div>
            <button type="submit" class="btn btn-primary" >Logga in</button>
        </EditForm>
    </div>
</div>

@code {
    private AuthenticationUserModel model = new();
    private bool ShowAuthError = false;
    private string AuthText = "";

    private async Task Authenticate()
    {
        ShowAuthError = false;

        AuthenticatedUserModel result = await AuthService.Login(model);

        if (result != null)
        {
            NavMan.NavigateTo("/");
        }
        else
        {
            AuthText = "An error occred while trying to log in";
            ShowAuthError = true;
        }
    }
}